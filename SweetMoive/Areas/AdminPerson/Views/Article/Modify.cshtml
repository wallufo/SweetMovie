@model SweetMoive.DAL.Models.Article

@{
    ViewBag.Title = "修改文章";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">修改文章</h1>
    </div>
</div>

@using (Html.BeginForm("Modify", "Article", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(Model => Model.ID)
    <div class="form-horizontal">
        <div class="row">
            <div class="col-lg-7 col-md-offset-2">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <fieldset disabled>
                    <div class="form-group">
                        <label class="control-label col-md-2" for="UserID">用户名</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.UserID, (IEnumerable<SelectListItem>)ViewBag.Users, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
                @Html.HiddenFor(model => model.UserID)
                <fieldset disabled>
                    <div class="form-group">
                        <label class="control-label col-md-2" for="MovieID">电影名称</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.MovieID, (IEnumerable<SelectListItem>)ViewBag.Movies, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MovieID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
                @Html.HiddenFor(model => model.MovieID)
                <div class="form-group">
                    @Html.LabelFor(model => model.Releasetime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Releasetime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Releasetime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model=>model.Auditstatus)
                <div class="form-group">
                    <div class="col-sm-offset-8 col-sm-4">
                        <input type="submit" class="btn btn-large btn-block btn-primary" value="提交" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/ckeditor")
@section scripts{
<script>
    $(document).on('ready', function () {
        ClassicEditor
       .create(document.querySelector('#Content'))
       .catch(error => {
           console.error(error);
       });
    })
   
 </script>
}