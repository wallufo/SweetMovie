@model SweetMoive.DAL.Models.MovieComment

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <fieldset disabled>
            <div class="form-group">
                <label class="control-label col-md-2" for="UserID">用户名</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.UserID, (IEnumerable<SelectListItem>)ViewBag.Users, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        @Html.HiddenFor(model => model.UserID)
        <fieldset disabled>
            <div class="form-group">
                <label class="control-label col-md-2" for="MovieID">电影名称</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.MovieID, (IEnumerable<SelectListItem>)ViewBag.Movies, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MovieID, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        @Html.HiddenFor(model=>model.MovieID)
            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CommentTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CommentTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommentTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Likes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Likes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Likes, "", new { @class = "text-danger" })
                </div>
            </div>
</div>
}
@Scripts.Render("~/bundles/jqueryval")